name: test

on:
  pull_request:
    paths-ignore:
      - "**/*.asciidoc"
      - "**/*.md"
      - "**/*.png"
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.asciidoc"
      - "**/*.md"
      - "**/*.png"

permissions:
  contents: read

## Concurrency only allowed in the main branch.
## So old builds running for old commits within the same Pull Request are cancelled
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:

  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      php-versions: ${{ steps.generate-matrix.outputs.php-versions }}
    steps:
      - uses: actions/checkout@v3
      - id: generate-matrix
        run: |
          echo "php-versions=$(jq -c .versions .ci/php-versions.json)" >> $GITHUB_OUTPUT

  test:
    name: static-checks-unit-tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs:
      - prepare-matrix
    strategy:
      fail-fast: false
      matrix:
        php-version: ${{ fromJSON(needs.prepare-matrix.outputs.php-versions) }}
        dockerfile:
          - "Dockerfile"
          - "Dockerfile.alpine"
    env:
      PHP_VERSION: ${{ matrix.php-version }}
      DOCKERFILE: ${{ matrix.dockerfile }}
    steps:
      - uses: actions/checkout@v3
      - name: Prepare
        run: make -f .ci/Makefile prepare
      - name: Build
        run: make -f .ci/Makefile build
      - name: Static Check / Unit tests
        run: make -f .ci/Makefile static-check-unit-test
      - name: Build parts for packages
        run: make -f .ci/Makefile generate-for-package
      - uses: actions/upload-artifact@v3
        with:
          name: package-parts
          path: src/ext/modules/*.so
      - if: success() || failure()
        name: Prepare Upload
        run: >-
          find build
          -name "*junit.xml"
          -exec bash -c 'mv {} "build/${PHP_VERSION}-${DOCKERFILE}-$(basename {})"'
          \;
      - if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/*junit.xml
          if-no-files-found: error

  build-packages:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: package-parts
          path: src/ext/modules
      - name: package
        run: make -C packaging package
      - name: package info
        run: make -C packaging info
      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: |
            build/packages/*
            !build/packages/**/*.sha512

  test-packages-lifecycle-apache:
    timeout-minutes: 120
    needs:
      - build-packages
      - test
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        php-version: ${{ fromJSON(needs.prepare-matrix.outputs.php-versions) }}
        package-type:
          - deb
        type:
          - "no_ext_svc"
          - "with_ext_svc"
        testing-type:
          - "lifecycle-apache"
          - "lifecycle-fpm"
    env:
      ELASTIC_APM_PHP_TESTS_MATRIX_ROW: "${{ matrix.php-version }},${{ matrix.package-type }},${{ matrix.testing-type }},http,${{ matrix.type }}"
      PHP_VERSION: ${{ matrix.php-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/test-packages
        with:
          package-type: ${{ matrix.package-type }}
          testing-type: ${{ matrix.testing-type }}

  test-packages-lifecycle:
    timeout-minutes: 120
    needs:
      - build-packages
      - test
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 10
      fail-fast: false
      matrix:
        php-version: ${{ fromJSON(needs.prepare-matrix.outputs.php-versions) }}
        package-type:
          - deb
          - rpm
          - apk
        type:
          - "no_ext_svc"
          - "with_ext_svc"
        sub-type:
          - "http"
          - "cli"
        testing-type:
          - "lifecycle"
    env:
      ELASTIC_APM_PHP_TESTS_MATRIX_ROW: "${{ matrix.php-version }},${{ matrix.package-type }},${{ matrix.testing-type }},${{ matrix.sub-type }},${{ matrix.type }}"
      PHP_VERSION: ${{ matrix.php-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/test-packages
        with:
          package-type: ${{ matrix.package-type }}
          testing-type: ${{ matrix.testing-type }}

  test-packages-lifecycle-debug:
    timeout-minutes: 120
    needs:
      - build-packages
      - test
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        php-version:
          - "7.2"
          - "8.2"
        package-type:
          - apk
          - deb
        type:
          - "no_ext_svc"
          - "with_ext_svc"
        sub-type:
          - "http"
          - "cli"
        testing-type:
          - "lifecycle"
    env:
      ELASTIC_APM_PHP_TESTS_MATRIX_ROW: "${{ matrix.php-version }},${{ matrix.package-type }},lifecycle,${{ matrix.sub-type }},${{ matrix.type }},agent_syslog_level=DEBUG"
      PHP_VERSION: ${{ matrix.php-version }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/test-packages
        with:
          package-type: ${{ matrix.package-type }}
          testing-type: ${{ matrix.testing-type }}
